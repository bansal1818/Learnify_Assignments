// 1.create a class and with divide two numbers by using Scanner class.(z=a/b).without try catch.

package com.ia.exceptions;
import java.util.Scanner;

public class Excep1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter First number:");
		int a=sc.nextInt();
		System.out.println("Enter Second number:");
		int b=sc.nextInt();
		
		int z=a/b;
		System.out.println("Result="+z);
	}

}



/*  2.create a class and take the input from by using scanner class, as a end user take two numbers with 
division and observe which type of exception raised. and apply try catch blocks. */

package com.ia.exceptions;

public class Exception2 {
      public static void main(String[] args) {
		// TODO Auto-generated method stub

		try {
			int a[]= new int[5];
			a[4]=15/4;
			String s= "Bansal";
			System.out.println(s.length());
			int x= Integer.parseInt(s);
			System.out.println("no error  "+a[4]+"  "+x);
			}
			catch(ArrayIndexOutOfBoundsException ae) {
				System.out.println("please enter valid index");
			}
			catch(ArithmeticException ae) {
				System.out.println("dont enter denominotor as zero");
			}
			catch (NumberFormatException e) {
			System.out.println("can't convert String to number");
			}
			catch(Exception ae) {
				System.out.println("Unable to find length of the String");
			}
			finally {
				System.out.println("executes every time to close the connection");
			}
			System.out.println("remaining 1000 lines of code");
			}}





// 3. Create a class with single try multi catch blocks.    

package com.ia.exceptions;

public class Exception3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {
			int a = 5 / 2;

			try {
				System.out.println("division");
				int b = 30 / 0;}
			 catch (ArithmeticException ae) {
			    System.out.println(ae);	 }

			try {
				int arr[] = new int[3];
				arr[3] = 4;
			}
			catch (ArrayIndexOutOfBoundsException ae) {
				System.out.println(ae);}
			finally {
				System.out.println("executes every time");
			}
			System.out.println("remaining try statement");
		} 
		catch (Exception e) {
			System.out.println("handled");
		}
		System.out.println("normal Execution");}
}



// 4. create a class with user defined exceptions.  

package com.ia.exceptions;

class MyException extends Exception{ 
	
	private int age;
	
	public MyException(int age) {
		this.age=age;
	}
	
	public String toString() {
		return "you are not aligeble for vote";
	}
}
public class Exception4 {

	 static  void validation(int age) throws MyException {
	    	if (age<18)
	    		throw new MyException(age);
	    	else
	    		System.out.println("you are eleible for vote"+age);
	    }
	public static void main(String[] args) throws MyException {
		
		Exception4.validation(12);
		System.out.println("rest of the code");

	}

}



/* 5.create a class with Marks, and valid Marks method, give some number marks are less than
he/she fails otherwise pass by using throw keyword.  */


package com.ia.exceptions;

public class Exception5 {

public void pass(int marks) {
		
		if (marks<10)
			throw new ArithmeticException("you are failed");
		
		else
		{
			System.out.println("you are passed:"+marks);
		}
	}
public static void main(String[] args) {
	
	Exception5 t= new Exception5();
	t.pass(8);
	System.out.println("welcome");
	

	}

}

