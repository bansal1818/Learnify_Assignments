1.

package com.setmap;

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class HashMapAndEntrySet {
	public static void main(String[] args) {
		Map<Integer,String> mp = new HashMap<>();
		mp.put(1, "Vinay");
		mp.put(2, "Bansal");
		mp.put(3, null);
		mp.put(4, "lol");
		
		System.out.println(mp);
		Set<Entry<Integer, String>> setObj = mp.entrySet();
		System.out.println(setObj);
	}
}


2.


package com.setmap;

import java.util.HashMap;
import java.util.Map;

public class HashMapValues {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Map<Integer,String> mp = new HashMap<>();
		mp.put(1, "Vinay");
		mp.put(2, "Bansal");
		mp.put(3, null);
		mp.put(4, "lol");
		
		System.out.println(mp.values());
	}

}

3.

package com.setmap;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class HashMapWithKeyset {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Map<Integer,String> mp = new HashMap<>();
		mp.put(1, "Vinay");
		mp.put(2, "Bansal");
		mp.put(3, null);
		mp.put(4, "lol");
		
		System.out.println(mp);
		
		Set<Integer> setObj = mp.keySet();
		System.out.println(setObj);
	}

}

4.

package com.setmap;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class HashSetAndIterator {
	public static void main(String[] args) {
		Set<Object> obj = new HashSet<>();
		for(int i=0;i<10;i++) {
			obj.add(i*10);
		}
		obj.add(199);
		obj.add(50);
		obj.add(51);
		System.out.println(obj);
		
		Iterator itr = obj.iterator();
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
	}
}


5.
package com.setmap;

import java.util.HashSet;
import java.util.Set;

public class HashSetExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Set<Object> obj = new HashSet<>();
		for(int i=0;i<10;i++) {
			obj.add(i*10);
		}
		obj.add(199);
		obj.add(50);
		obj.add(51);
		System.out.println(obj);
	}
}